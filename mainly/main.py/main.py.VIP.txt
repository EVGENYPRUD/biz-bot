# === VIP-–∞–Ω–∫–µ—Ç–∞ —Å –ø–æ–¥—Å—á—ë—Ç–æ–º –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º —Ü–µ–Ω—ã ===
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

class VIPForm(StatesGroup):
    choosing_topics = State()

vip_topics = [
    "–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –≤ –†–§",
    "–ê–Ω–∞–ª–∏–∑ –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤",
    "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
    "–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω",
    "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑",
    "SWOT-–∞–Ω–∞–ª–∏–∑",
    "PEST-–∞–Ω–∞–ª–∏–∑",
    "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑",
    "–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞",
    "–ê–Ω–∞–ª–∏–∑ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
    "–ê–Ω–∞–ª–∏–∑ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≥–æ—Ä–æ–¥—É",
    "–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–≥–∏–æ–Ω–æ–≤",
    "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑",
    "–†–∏—Å–∫–∏ –∏ –±–∞—Ä—å–µ—Ä—ã –≤—Ö–æ–¥–∞",
    "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É",
    "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
]

def get_vip_keyboard(selected):
    buttons = []
    for i, topic in enumerate(vip_topics):
        prefix = "‚úÖ " if i in selected else "‚ûï "
        buttons.append([InlineKeyboardButton(f"{prefix}{topic}", callback_data=f"vip_{i}")])
    buttons.append([InlineKeyboardButton("–ì–æ—Ç–æ–≤–æ", callback_data="vip_done")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

@dp.message_handler(commands=["vip"])
async def start_vip_form(message: types.Message, state: FSMContext):
    await state.update_data(selected=set())
    await VIPForm.choosing_topics.set()
    await message.answer(
        "üìã –í—ã–±–µ—Ä–∏, –∫–∞–∫–∏–µ —Ç–µ–º—ã —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:",
        reply_markup=get_vip_keyboard(set())
    )

@dp.callback_query_handler(lambda c: c.data.startswith("vip_"), state=VIPForm.choosing_topics)
async def handle_vip_selection(callback_query: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    selected = data.get("selected", set())

    if callback_query.data == "vip_done":
        count = len(selected)
        if count == 0:
            await callback_query.answer("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ç–µ–º—ã.", show_alert=True)
            return

        # –ì—Ä–∞–¥–∞—Ü–∏—è —Ü–µ–Ω—ã
        if count == 1:
            price = "–æ—Ç 4.990 ‚ÇΩ"
        elif 2 <= count <= 4:
            price = "–æ—Ç 5.990 ‚ÇΩ"
        elif 5 <= count <= 7:
            price = "–æ—Ç 6.990 ‚ÇΩ"
        elif 8 <= count <= 10:
            price = "–æ—Ç 7.990 ‚ÇΩ"
        elif 11 <= count <= 13:
            price = "–æ—Ç 8.990 ‚ÇΩ"
        else:
            price = "–¥–æ 9.990 ‚ÇΩ"

        await bot.send_message(
            callback_query.from_user.id,
            f"üìä –í—ã –≤—ã–±—Ä–∞–ª–∏ {count} —Ç–µ–º(—ã). –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: *{price}*\n\n"
            "üìå –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤.\n"
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ ‚Äî –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç—ë–º.",
            parse_mode="Markdown"
        )
        await state.finish()
        return

    # –¢–æ–≥–≥–ª –≤—ã–±–æ—Ä–∞
    topic_id = int(callback_query.data.split("_")[1])
    if topic_id in selected:
        selected.remove(topic_id)
    else:
        selected.add(topic_id)
    await state.update_data(selected=selected)
    await bot.edit_message_reply_markup(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        reply_markup=get_vip_keyboard(selected)
    )
