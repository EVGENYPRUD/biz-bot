import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InputFile, InlineKeyboardButton, InlineKeyboardMarkup
from keyboards import keyboard_main, pdf_choice_keyboard, payment_button, base_pdf_keyboard, pro_pdf_keyboard
from aiogram.dispatcher.filters import Command
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

# === –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º ===
BASE_DIR = os.path.dirname(__file__)
IMAGE_DIR = os.path.join(BASE_DIR, "images")
PDF_DIR = os.path.join(BASE_DIR, "pdf_files")
FREE_PDF_DIR = os.path.join(PDF_DIR, "1Free")
BASE_PDF_DIR = os.path.join(PDF_DIR, "2Base")
PRO_PDF_DIR = os.path.join(PDF_DIR, "3Pro")
VIP_PDF_DIR = os.path.join(PDF_DIR, "4VIP")

# === –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ===
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_help_response.png"))
    await bot.send_photo(
        message.chat.id,
        photo=photo,
        caption=(
            "–ü—Ä–∏–≤–µ—Ç! ü§ñ\n\n"
            "–Ø ‚Äî –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ ¬´–ë–∏–∑–Ω–µ—Å –ø–æ —à–∞–±–ª–æ–Ω—É¬ª.\n"
            "–ü–æ–º–æ–≥–∞—é –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è —Ç–µ–±–µ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ.\n\n"
            "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ‚Äî —Ä–∞–∑–±–µ—Ä—ë–º—Å—è –≤–º–µ—Å—Ç–µ:"
        ),
        reply_markup=keyboard_main
    )

# === –û—Å–Ω–æ–≤–Ω–æ–π –≤—ã–±–æ—Ä PDF ===
@dp.message_handler(commands=["files"])
async def show_pdf_options(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ PDF-–¥–æ–∫—É–º–µ–Ω—Ç:", reply_markup=pdf_choice_keyboard())

@dp.message_handler(commands=["pay"])
async def show_payment(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_help_response.png"))
    await bot.send_photo(
        message.chat.id,
        photo=photo,
        caption="–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –æ–ø–ª–∞—Ç–µ:",
        reply_markup=payment_button()
    )

@dp.message_handler(commands=["check"])
async def check_payment(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_checking_payment.png"))
    await bot.send_photo(message.chat.id, photo=photo, caption="–ü—Ä–æ–≤–µ—Ä—è—é –æ–ø–ª–∞—Ç—É‚Ä¶")

@dp.message_handler(commands=["test"])
async def test(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_generating.png"))
    await bot.send_photo(message.chat.id, photo=photo, caption="–î–æ–∫—É–º–µ–Ω—Ç –≥–æ—Ç–æ–≤, –≤–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞:")
    doc = InputFile(os.path.join(FREE_PDF_DIR, "02_–ë–∏–∑–Ω–µ—Å_–ø–ª–∞–Ω.pdf"))
    await message.answer_document(doc)

# === –ö–∞—Ç–∞–ª–æ–≥–∏ BASE –∏ PRO ===
@dp.message_handler(commands=["base"])
async def show_base_catalog(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –Ω–∏—à—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ BASE:", reply_markup=base_pdf_keyboard())

@dp.message_handler(commands=["pro"])
async def show_pro_catalog(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –Ω–∏—à—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ PRO:", reply_markup=pro_pdf_keyboard())

# === Inline-—Ö–µ–Ω–¥–ª–µ—Ä—ã BASE –∏ PRO ===
@dp.callback_query_handler(lambda c: c.data.startswith("base_"))
async def send_base_pdf(callback_query: types.CallbackQuery):
    filename = f"{callback_query.data}.pdf"
    path = os.path.join(BASE_PDF_DIR, filename)
    await bot.send_document(callback_query.from_user.id, InputFile(path))

@dp.callback_query_handler(lambda c: c.data.startswith("pro_"))
async def send_pro_pdf(callback_query: types.CallbackQuery):
    filename = f"{callback_query.data}.pdf"
    path = os.path.join(PRO_PDF_DIR, filename)
    await bot.send_document(callback_query.from_user.id, InputFile(path))

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ free_... PDF ===
@dp.callback_query_handler(lambda c: c.data.startswith("free_"))
async def send_free_pdf(callback_query: types.CallbackQuery):
    filename = f"{callback_query.data[5:]}.pdf"
    path = os.path.join(FREE_PDF_DIR, filename)
    if os.path.exists(path):
        await bot.send_document(callback_query.from_user.id, InputFile(path))
    else:
        await bot.send_message(callback_query.from_user.id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é ===
@dp.callback_query_handler(lambda c: c.data == "go_start")
async def return_to_menu(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_main)

# === –ë–ª–æ–∫ ¬´–û –ø—Ä–æ–µ–∫—Ç–µ¬ª ‚Äî –∏ –∫–Ω–æ–ø–∫–∞, –∏ –∫–æ–º–∞–Ω–¥–∞ ===
@dp.message_handler(commands=["about"])
@dp.message_handler(lambda message: "–æ –ø—Ä–æ–µ–∫—Ç–µ" in message.text.lower())
async def show_about(message: types.Message):
    text = (
        "üìò *–û –ø—Ä–æ–µ–∫—Ç–µ*\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ *¬´–ë–∏–∑–Ω–µ—Å –ø–æ —à–∞–±–ª–æ–Ω—É¬ª*.\n"
        "–ú—ã —Å–æ–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–µ –≥–æ—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:\n"
        "‚Äî –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã\n"
        "‚Äî —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ–¥–∞–∂\n"
        "‚Äî —á–µ–∫-–ª–∏—Å—Ç—ã –∏ —à–∞–±–ª–æ–Ω—ã\n\n"
        "üéØ –í—Å—ë —á—ë—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É ‚Äî —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –Ω–∞—á–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.\n\n"
        "üì¶ –ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (Free) –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ (Base / Pro / VIP)\n\n"
        "VIP-—Ñ–æ—Ä–º–∞—Ç ‚Äî —ç—Ç–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é.\n"
        "–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã –º—ã —É—á—Ç—ë–º –≤—Å—ë: —Ü–µ–ª–∏, –ø—Ä–æ–¥—É–∫—Ç, —Ñ–æ—Ä–º–∞—Ç, –∞—É–¥–∏—Ç–æ—Ä–∏—é.\n"
        "–ß–µ–º –±–æ–ª—å—à–µ —Ç–µ–º —Ç—ã –∑–∞—Ö–æ—á–µ—à—å –æ—Ö–≤–∞—Ç–∏—Ç—å ‚Äî —Ç–µ–º –≥–ª—É–±–∂–µ –±—É–¥–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ.\n\n"
        "üì© *–ü–æ—á—Ç–∞ –¥–ª—è —Å–≤—è–∑–∏:* bizplanhub8@gmail.com\n\n"
        "üåê *–ö–∞–Ω–∞–ª:* @bizplanhub\n\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è üôÇ"
    )
    await message.answer(text, parse_mode="Markdown", reply_markup=keyboard_main)

# === –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã ===
@dp.message_handler(lambda message: "–ø–æ–º–æ—â—å" in message.text.lower())
async def show_help(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_help_response.png"))
    await bot.send_photo(message.chat.id, photo=photo, caption="–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ.", reply_markup=keyboard_main)

@dp.message_handler(lambda message: "pdf" in message.text.lower())
async def handle_pdf_request(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_generating.png"))
    await bot.send_photo(message.chat.id, photo=photo, caption="–í–æ—Ç PDF-–¥–æ–∫—É–º–µ–Ω—Ç—ã! –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É ‚Äî –∏ –ø–æ–ª—É—á–∏—à—å —Ñ–∞–π–ª üìÑ", reply_markup=pdf_choice_keyboard())

@dp.message_handler(lambda message: "–≤–∏—Ç—Ä–∏–Ω" in message.text.lower())
async def open_showcase(message: types.Message):
    photo = InputFile(os.path.join(IMAGE_DIR, "bot_generating.png"))
    await bot.send_photo(message.chat.id, photo=photo, caption="–í–æ—Ç PDF-–¥–æ–∫—É–º–µ–Ω—Ç—ã! –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É ‚Äî –∏ –ø–æ–ª—É—á–∏—à—å —Ñ–∞–π–ª üìÑ", reply_markup=pdf_choice_keyboard())

# === –ü—Ä–µ–≤—å—é/–≤–∏—Ç—Ä–∏–Ω–∞ PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ===
@dp.message_handler(lambda message: "–æ–±—Ä–∞–∑—Ü" in message.text.lower())
async def show_previews(message: types.Message):
    photo1 = InputFile(os.path.join(IMAGE_DIR, "preview_bizplan.png"))
    await bot.send_photo(
        message.chat.id,
        photo=photo1,
        caption="üìÑ *–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –¥–ª—è —Å—Ç–∞—Ä—Ç–∞*\n\n‚Äî 12 –≥–æ—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤\n‚Äî –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ —Å–∞–º–æ–∑–∞–ø—É—Å–∫–∞\n‚Äî PDF, 10 —Å—Ç—Ä.",
        parse_mode="Markdown"
    )
    photo2 = InputFile(os.path.join(IMAGE_DIR, "preview_sales.png"))
    await bot.send_photo(
        message.chat.id,
        photo=photo2,
        caption="üìÑ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–æ–¥–∞–∂*\n\n‚Äî –°–∏—Å—Ç–µ–º–∞ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ 30 –¥–Ω–µ–π\n‚Äî –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω\n‚Äî PDF, 8 —Å—Ç—Ä.",
        parse_mode="Markdown"
    )
    await message.answer("–ì–æ—Ç–æ–≤ –ø–æ–ª—É—á–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∏—Ç—å¬ª üëá", reply_markup=payment_button())

# === –í—ã–¥–∞—á–∞ PDF –ø–æ –∫–Ω–æ–ø–∫–µ ===
@dp.callback_query_handler(lambda c: c.data == 'pdf_plan')
async def send_pdf_plan(callback_query: types.CallbackQuery):
    path = os.path.join(FREE_PDF_DIR, "02_–ë–∏–∑–Ω–µ—Å_–ø–ª–∞–Ω.pdf")
    await bot.send_document(callback_query.from_user.id, InputFile(path))

@dp.callback_query_handler(lambda c: c.data == 'pdf_sales')
async def send_pdf_sales(callback_query: types.CallbackQuery):
    path = os.path.join(FREE_PDF_DIR, "03_–°—Ç—Ä–∞—Ç–µ–≥–∏—è_–ø—Ä–æ–¥–∞–∂.pdf")
    await bot.send_document(callback_query.from_user.id, InputFile(path))

@dp.callback_query_handler(lambda c: c.data == "get_5–û—à–∏–±–æ–∫")
async def send_5oshibok(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    path = os.path.join(FREE_PDF_DIR, "01_5–û—à–∏–±–æ–∫.pdf")
    await bot.send_document(callback_query.from_user.id, InputFile(path))

@dp.message_handler(lambda message: "–æ—à–∏–±–∫" in message.text.lower())
async def send_5oshibok_on_keyword(message: types.Message):
    path = os.path.join(FREE_PDF_DIR, "01_5–û—à–∏–±–æ–∫.pdf")
    await bot.send_document(message.chat.id, InputFile(path))

# === Fallback ===
@dp.message_handler()
async def fallback(message: types.Message):
    await message.reply("–Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá", reply_markup=keyboard_main)

if __name__ == "__main__":
    print("‚úÖ main.py –∞–∫—Ç–∏–≤–µ–Ω")
    executor.start_polling(dp, skip_updates=True)
